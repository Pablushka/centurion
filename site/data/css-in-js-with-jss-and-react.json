{
  "id": "be77c4d8-9bb7-4686-87f1-9c04fc1d07a5",
  "name": "CSS in JS with JSS and React",
  "slides": [
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/css-in-js-with-jss-and-react.jpg" }
      }, {
        "element": "Heading",
        "props": { "node": "h1" },
        "children": "CSS in JS with JSS and React"
      }, {
        "element": "Paragraph",
        "children": "Style scalable web applications with the CSS in JavaScript implementation JSS using ReactJS components."
      }, {
        "element": "Paragraph",
        "children": [{
          "element": "span",
          "children": "Written version: "
        }, {
          "element": "Link",
          "props": { "href": "https://medium.com/jobsity/css-in-javascript-with-jss-and-react-54cdd2720222", "target": "_blank" },
          "children": "CSS in JavaScript with JSS and React"
        }]
      }]
    },
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/shack.jpg" }
      }, {
        "element": "Heading",
        "props": { "node": "h2" },
        "children": "Styling Static Pages"
      }, {
        "element": "Paragraph",
        "children": "Back in the 90's when CSS was created, pages were static and the web was not so popular. Using simple selectors and a couple of properties were pretty much enough."
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/altavista-2001.png" }
    },
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/city.jpg" }
      }, {
        "element": "Heading",
        "props": { "node": "h3" },
        "children": "Times Have Changed"
      }, {
        "element": "Paragraph",
        "children": "Nowadays we have \"web applications\" with complex user interfaces giving immersive experiences to users."
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/real-apps.jpg" }
    },
    {
      "children": [{
        "element": "Heading",
        "props": { "node": "h3" },
        "children": "Problems of CSS at Scale"
      }, {
        "element": "Paragraph",
        "children": "When a project starts to grow large, CSS doesn’t allow us to perform so well and problems start to arise."
      }, {
        "element": "List",
        "children": [{
          "element": "li",
          "children": "Modularity - global namespacing, overuse of specificity"
        }, {
          "element": "li",
          "children": "Theming - dynamic configuration"
        }, {
          "element": "li",
          "children": "Publishing - preprocessors, build tools and conflicts"
        }, {
          "element": "li",
          "children": "Optimizations - vendor prefixing, dead code elimination"
        }, {
          "element": "li",
          "children": "And more..."
        }]
      }]
    },
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/css-enhancing-tools.png" }
      }, {
        "element": "Heading",
        "props": { "node": "h2" },
        "children": "CSS Enhancing Tools"
      }, {
        "element": "Paragraph",
        "children": "So, what are the current solutions to the problems we have now?"
      }]
    },
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/technologies.png" }
      }, {
        "element": "Heading",
        "props": { "node": "h2" },
        "children": "CSS in JavaScript"
      }, {
        "element": "Paragraph",
        "children": "The full potential of JavaScript to generate the styles!"
      }]
    },
    {
      "children": [{
        "element": "ImagePlain",
        "props": { "src": "/static/talks/css-in-js-with-jss-and-react/jss-and-react.png" }
      }, {
        "element": "Heading",
        "props": { "node": "h2" },
        "children": "JSS in React"
      }, {
        "element": "Paragraph",
        "children": "CSSinJS is a concept kinda open. JSS is one solution with many powerful and extensive features along with React."
      }]
    },
    {
      "children": [{
        "element": "Code",
        "props": { "type": "pre", "language": "javascript" },
        "children": "import jss from 'jss';\nimport preset from 'jss-preset-default';\njss.setup(preset());\nconst styles = {\n  button: {\n    background: 'red',\n    color: 'white',\n    fontSize: 12\n  },\n  ctaButton: {\n    composes: '$button',\n    background: 'blue',\n    fontWeight: 'bold'\n  }\n};\nconst { classes } = jss.createStyleSheet(styles).attach();\ndocument.body.innerHTML = `\n  <button class=\"${classes.button}\">Button</button>\n  <button class=\"${classes.ctaButton}\">CTA Button</button>\n`;"
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/css-in-js-1.jpg" }
    },
    {
      "children": [{
        "element": "Code",
        "props": { "type": "pre", "language": "javascript" },
        "children": "// index.js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { ThemeProvider } from 'react-jss';\nimport Button from './Button';\nconst mainTheme = {\n  colorPrimary: 'blue',\n  colorActive: 'red'\n};\nconst App = () => (\n  <ThemeProvider theme={mainTheme}>\n    <div>\n      <Button>Button</Button>\n      <Button active>Active Button</Button>\n    </div>\n  </ThemeProvider>\n);\nrender(<App />, document.querySelector('#root'));\n"
      }]
    },
    {
      "children": [{
        "element": "Code",
        "props": { "type": "pre", "language": "javascript" },
        "children": "// Button.js\nimport React from 'react';\nimport withStyles from 'react-jss';\nimport cx from 'classnames';\nconst styles = theme => ({\n  root: {\n    background: theme.colorPrimary,\n    color: 'white',\n    fontSize: 16\n  },\n  active: {\n    background: theme.colorActive,\n    fontWeight: 'bold'\n  }\n});\nclass Button extends React.Component {\n  render () {\n    const {\n      classes, theme,\n      className, children, active,\n      ...etc\n    } = this.props;\n    const cls = cx(\n      classes.root,\n      active && classes.active,\n      className\n    );\n    return (\n      <button className={cls} {...etc}>\n        {children}\n      </button>\n    );\n  }\n}\nexport default withStyles(styles)(Button);"
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/css-in-js-2.jpg" }
    },
    {
      "children": [{
        "element": "Code",
        "props": { "type": "pre", "language": "javascript" },
        "children": "const styles = theme => ({\n  root: {\n    color: 'white',\n    fontSize: 16,\n    background: props => props.active\n      ? theme.colorActive\n      : theme.colorPrimary,\n    fontWeight: props => props.active && 'bold'\n  }\n});\nclass Button extends React.Component {\n  render () {\n    const {\n      classes, theme,\n      className, children, active,\n      ...etc\n    } = this.props;\n    const cls = cx(classes.root, className);\n    return (\n      <button className={cls} {...etc}>\n        {children}\n      </button>\n    );\n  }\n}"
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/css-in-js-3.jpg" }
    },
    {
      "children": [{
        "element": "Heading",
        "props": { "node": "h2" },
        "children": "UI Frameworks"
      }]
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/material-ui.png" }
    },
    {
      "props": { "bgImage": "/static/talks/css-in-js-with-jss-and-react/arwes.jpg" }
    },
    {
      "children": [{
        "element": "Paragraph",
        "children": [{
          "element": "span",
          "children": "By:"
        }, {
          "element": "Link",
          "props": { "href": "/" },
          "children": "Romel Pérez"
        }]
      }]
    }
  ]
}
